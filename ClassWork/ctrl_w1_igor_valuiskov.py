# import random
# import math
#
# # 1. Вывести на экран числа 5, 10 и 21 одно под другим используя один
# # print.
#
# print(5, 10, 21, sep="\n")
#
# # 2. Дано трехзначное число. В нем зачеркнули первую слева цифру и
# # приписали ее в конце. Найти полученное число.
#
# number = int(input("Введите трехзначное число: "))
# dig1 = number // 100
# dig2 = (number // 10) % 10
# dig3 = number % 10
# new_number = dig2 * 100 + dig3 * 10 + dig1
# print(new_number)
#
# # 3. Вычислить значение логического выражения при следующих
# # значениях логических величин А, В и С: А = Истина, В = Ложь, С =
# # Ложь:
# # а) А или не (А и В) или С;
# # б) не А или А и (В или С);
# # в) (А или В и не С) и С.
#
# A = True
# B = False
# C = False
#
# # a)
# res_a = A or (not (A and B)) or C
# print("a) ", res_a)
#
# # б)
# res_b = not A or A and (B or C)
# print("б) ", res_b)
#
# # в)
# res_v = (A or B and (not C)) and C
# print("в) ", res_v)
#
# # 4. Записать условие, которое является истинным, когда:
# # а) каждое из чисел А и В больше 99;
# # б) только одно из чисел А и В четное;
# # в) хотя бы одно из чисел А и В положительно;
# # г) каждое из чисел А, В, С кратно четырем;
#
# # а) каждое из чисел А и В больше 99;
# res_1 = (A >= 99 and B >= 99)
# # б) только одно из чисел А и В четное;
# res_2 = (A % 2 == 0 and B % 2 != 0) or (A % 2 != 0 and B % 2 == 0)
# # в) хотя бы одно из чисел А и В положительно;
# res_3 = (A > 0) or (B > 0)
# # г) каждое из чисел А, В, С кратно четырем;
# res_4 = (A % 4 == 0) and (B % 4 == 0) and (C % 4 == 0)
#
# # 5. Дано трехзначное число. Определить, равен ли квадрат этого числа
# # сумме кубов его цифр.
#
# number = int(input("Введите трехзначное число: "))
# square_number = number ** 2
# summ_cubes = 0
# for i in str(number):
#     summ_cubes += int(i) ** 3
# if summ_cubes == square_number:
#     print(f"Квадрат ({square_number}) числа {number} равен сумме кубов ({summ_cubes}) его цифр")
# else:
#     print(f"Квадрат ({square_number}) числа {number} не равен сумме его кубов ({summ_cubes}) его цифр")
#
# # 6. Составить программу:
# # a)
# a = random.uniform(0, 100)
# x = math.sqrt((2 * a + math.sin(abs(3 * a)))) / 3.56
# print(x)
# # в)
# x = random.uniform(1, 100)
# y = math.sin((3.2 + math.sqrt(1 + x)) / abs(5 * x))
# print(y)
#
#
# # 7. Напечатать таблицу умножения на число n (значение n вводится с
# # клавиатуры; 1 n 9).
# def multiplication_table(n):
#     for i in range(1, 10):
#         print(f"{n} * {i} = {n * i}")
#
#
# # 8. Составить программу для расчета факториала натурального числа n
# # (факториал числа n равен 1* 2 * … * n ).
#
# def factorial(n):
#     if n < 0:
#         print("Ошибка: отрицательное число")
#     else:
#         result = 1
#         while n > 1:
#             result *= n
#             n -= 1
#         return result


# 9. Дано натуральное число. Определить номер цифры 8 в нем, считая
# # от конца числа. Если такой цифры нет, ответом должно быть число 0,
# # если таких цифр в числе несколько — должен быть определен номер
# # самой левой из них. (ЧЕРЕЗ WHILE)

def find_eight(n):
    position = 1
    found_position = 0

    while n > 0:
        if n % 10 == 8:
            found_position = position
        n = n // 10
        position += 1

    return found_position


def main():
    # # 7. Напечатать таблицу умножения на число n
    # n = int(input("Введите число n для таблицы умножения (1 <= n <= 9): "))
    # if 1 <= n <= 9:
    #     multiplication_table(n)
    # else:
    #     print("Ошибка: число n должно быть в диапазоне от 1 до 9.")
    #
    # # 8. Составить программу для расчета факториала натурального числа n
    # # (факториал числа n равен 1 * 2 * … * n).
    # n = int(input("Введите натуральное число для расчета факториала: "))
    # if n >= 0:
    #     print(f"Факториал числа {n} равен {factorial(n)}")
    # else:
    #     print("Ошибка: введите натуральное число.")

    # 9. Дано натуральное число. Определить номер цифры 8 в нем, считая
    # от конца числа.
    n = int(input("Введите натуральное число: "))
    position_of_eight = find_eight(n)
    if position_of_eight > 0:
        print(f"Номер самой левой цифры 8 с конца: {position_of_eight}")
    else:
        print("Цифра 8 в числе не найдена.")


if __name__ == "__main__":
    main()
